<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mike&#39;s Blog</title>
    <link>https://michael-myers.github.io/blog/post/</link>
    <description>Recent content in Posts on Mike&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jun 2017 21:49:47 -0400</lastBuildDate>
    
	<atom:link href="https://michael-myers.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CTF Forensics Field Guide</title>
      <link>https://michael-myers.github.io/blog/post/ctf-forensics-field-guide/</link>
      <pubDate>Mon, 19 Jun 2017 21:49:47 -0400</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/ctf-forensics-field-guide/</guid>
      <description>Note: this post was also submitted as a chapter to the CTF field guide.
Forensics In a CTF context, &amp;ldquo;Forensics&amp;rdquo; challenges can include file format analysis, steganography, memory dump analysis, or network packet capture analysis. Any challenge to examine and process a hidden piece of information out of static data files (as opposed to executable programs or remote servers) could be considered a Forensics challenge (unless it involves cryptography, in which case it probably belongs in the Crypto category).</description>
    </item>
    
    <item>
      <title>A tour of Rust, Pt. 2</title>
      <link>https://michael-myers.github.io/blog/post/a-tour-of-rust-2/</link>
      <pubDate>Mon, 20 Mar 2017 22:56:03 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/a-tour-of-rust-2/</guid>
      <description>In my last post, I talked about what I think is the significance of the programming language Rust, and why I wanted to try learning it. Today, I take a look at Exercism.io (a sort-of social network for programming exercises) and its series of Rust challenges. These are definitely easy problems (so far); the focus is on learning how to solve them in a language that is new to you.</description>
    </item>
    
    <item>
      <title>A Look at the Rust Programming Language</title>
      <link>https://michael-myers.github.io/blog/post/a-tour-of-rust/</link>
      <pubDate>Mon, 27 Feb 2017 13:06:16 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/a-tour-of-rust/</guid>
      <description>Where to Find More Execution Performance Moore&amp;rsquo;s Law is just about done. It once described a trend of transistor count doubling every 24 months (enabled by increasing the density of transistors by making them ever-smaller). Now:
 Between the introduction of 65 nm and 45 nm chips, about 23 months passed. To get from 45 nm to 32 nm took about 27 months, 28 months to go down from there to 22 nm and 30 months to shrink to the current 14 nm process.</description>
    </item>
    
    <item>
      <title>Government Contracting Jargon</title>
      <link>https://michael-myers.github.io/blog/post/government-contracting-jargon/</link>
      <pubDate>Tue, 21 Feb 2017 13:45:59 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/government-contracting-jargon/</guid>
      <description>Whether you&amp;rsquo;re just starting work for a business that does federal contracting, or if you&amp;rsquo;ve been doing it for a long time, you know that the contracting and administrative side of the business speaks its own language. Mostly this is the language of federal acquisition. Acquisition, here, refers to the process of the government acquiring a product or service from the private sector – also known as procurement. It is defined and codified by Congress in a regulation called the Federal Acquisition Regulation (FAR).</description>
    </item>
    
    <item>
      <title>Evaluating Equity as Compensation</title>
      <link>https://michael-myers.github.io/blog/post/equity-as-compensation/</link>
      <pubDate>Mon, 13 Feb 2017 23:41:37 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/equity-as-compensation/</guid>
      <description>The traditional model of entrepreneurship is:
 concept plan venture funding exit  It seems like most people just unquestioningly accept that this is the natural sequence of events, but why is it this way? Isn&amp;rsquo;t there something missing from this? Like what about the focus on the customer, or about actually making a great service or product? If a business is working, why do you need to leave? What&amp;rsquo;s the rush?</description>
    </item>
    
    <item>
      <title>Enigma2017 CTF Overflowme Writeup</title>
      <link>https://michael-myers.github.io/blog/post/enigma2017-overflowme-writeup/</link>
      <pubDate>Sun, 12 Feb 2017 17:52:54 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/enigma2017-overflowme-writeup/</guid>
      <description>As mentioned in my last post, I spent some time solving security challenges posted on HackCenter for the Enigma2017 conference. This one (obviously) was to exploit a buffer overflow vulnerability. It was meant to be relatively easy, but sometimes you don&amp;rsquo;t realize the easiest approach first. I&amp;rsquo;ll walk through not just the solution, but the things I tried that didn&amp;rsquo;t work. It was a refresher course in exploitation for me – I&amp;rsquo;ve spent many years on defense research and needed to brush up again.</description>
    </item>
    
    <item>
      <title>Enigma2017 CTF Broken Encryption Writeup</title>
      <link>https://michael-myers.github.io/blog/post/enigma2017-broken-encryption-writeup/</link>
      <pubDate>Sun, 12 Feb 2017 13:40:38 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/enigma2017-broken-encryption-writeup/</guid>
      <description>There is a new &amp;ldquo;Jeopardy style&amp;rdquo; security CTF web framework (CTF-as-a-Service?) called HackCenter that just debuted from For All Secure, the CMU-affiliated security startup known for winning last year&amp;rsquo;s DARPA Cyber Grand Challenge Final Event with their game-playing &amp;ldquo;automated exploit generation&amp;rdquo; system they called Mayhem CRS. HackCenter is their &amp;ldquo;other&amp;rdquo; technology, I guess, and right now the only CTF they&amp;rsquo;ve hosted is/was the one that occurred at Enigma2017 USENIX conference at the end of January.</description>
    </item>
    
    <item>
      <title>The markup language known as Markdown</title>
      <link>https://michael-myers.github.io/blog/post/markdown/</link>
      <pubDate>Sun, 05 Feb 2017 03:05:56 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/markdown/</guid>
      <description>What it Is Markdown is a lightweight markup language (as opposed to a heavyweight one like HTML or LaTeX). If you&amp;rsquo;ve ever taken plain-text file notes and used an asterisk to represent a bullet point, or a line of dashes like an underline for a heading, then you&amp;rsquo;ve basically already written Markdown. Markdown is a natural-looking &amp;ldquo;syntax&amp;rdquo; that lets you turn text like this:
## What it is [Markdown](https://en.wikipedia.org/wiki/Markdown) is a *lightweight markup language* (as opposed to a **heavyweight** one like HTML or LaTeX).</description>
    </item>
    
    <item>
      <title>Hugo, the static site generator</title>
      <link>https://michael-myers.github.io/blog/post/hugo/</link>
      <pubDate>Fri, 03 Feb 2017 19:07:12 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/hugo/</guid>
      <description>Hugo, a Static Site Generator In my last post, I covered the rationale behind using a static site generator. Static site generators are not just for creating blogs. They can also be used to create online resumes, company sites, online documentation, etc.
The default choice for static site generator is Jekyll, which has the most support, but it&amp;rsquo;s troublesome to install and use. Hugo is a popular alternative that is easier to install, and faster to work with.</description>
    </item>
    
    <item>
      <title>How to Blog in 2017</title>
      <link>https://michael-myers.github.io/blog/post/static-site-generators/</link>
      <pubDate>Fri, 03 Feb 2017 15:43:53 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/static-site-generators/</guid>
      <description>My first blog, back in the early 2000s, was on a hosted blogging platform known as Blogger. It was simple and convenient: as the admin you just logged into the Blogger service, edited posts in your browser, and hit publish. This is basically how Tumblr still works today, although Tumblr&amp;rsquo;s innovation was to include media file hosting and allow everyone to repost each others&amp;rsquo; content.
But Blogger content was static, and textual.</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>https://michael-myers.github.io/blog/post/welcome/</link>
      <pubDate>Thu, 02 Feb 2017 23:07:37 -0500</pubDate>
      
      <guid>https://michael-myers.github.io/blog/post/welcome/</guid>
      <description>Welcome to my blog. Here I&amp;rsquo;ll be writing about a variety of tech and business-related topics as I try to explore, experiment, and learn some new skills.
I&amp;rsquo;ve been working in computer security since mid-2000, but due to the nature of the work, I have unfortunately published little-to-nothing in the public sphere. As part of a plan to do more &amp;ldquo;giving back,&amp;rdquo; I&amp;rsquo;m starting this blog, and (hopefully) putting out some interesting open-source tools and articles.</description>
    </item>
    
  </channel>
</rss>